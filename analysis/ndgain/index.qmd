---
title: Untitled
subtitle: A slightly longer title
format:
  360-analysis-html: default
author: James Goldie
date: last-modified
code-fold: true
---

```{r}
#| label: setup
library(tidyverse)
library(countrycode)
library(ggflags)
library(here)
```

## Introduction

```{r}
#| label: download-ndgain
download_if_not_present <- function(url, dest_zip, dest_dir,
  temp_timeout = 3600) {
  if (!file.exists(dest_zip)) {
    message(paste0("Downloading data: ", basename(url), "..."))
    old_timeout <- options("timeout")
    options(timeout = temp_timeout)
    download.file(url, dest_zip)
    unzip(dest_zip, exdir = dest_dir)
    options(timeout = old_timeout)
  } else {
    message("Skipping download of ", basename(url))
  }
}

ndgain_dir <- here("data", "raw-ndgain")
download_if_not_present(
  "https://gain.nd.edu/assets/521644/nd_gain_country_index_2023.zip",
  here("data", "ndgain.zip"),
  ndgain_dir)
```

These CSV files appear to all have exactly the same structure, so let's just load them all into one data frame:
```{r}
#| label: load-files
list.files(ndgain_dir, pattern = glob2rx("*.csv"),
  recursive = TRUE, full.names = TRUE) |>
  tibble(
    path = _,
    base_path = path |>
      str_remove(here(ndgain_dir, "resources")) |>
      str_replace(".csv", ""),
    data = map(path, read_csv)) ->
nested_data
```

```{r}
#| label: tidy-data
# raw indicators
nested_data |>
  filter(str_starts(base_path, "/indicators")) |>
  unnest(data) |>
  mutate(base_path = str_sub(base_path, 2)) |>
  separate(base_path,
    into = c("folder", "indicator", "file"),
    sep = "/") |>
  filter(file == "score") |>
  select(-path, -folder, -file) |>
  pivot_longer(
    -c(indicator, ISO3, Name),
    names_to = "year", values_to = "score",
    names_transform = list(year = as.integer)) ->
tidy_indicators

# readiness/vulnerability
nested_data |>
  filter(
    str_starts(base_path, "/readiness") |
    str_starts(base_path, "/vulnerability")) |>
  select(-path) |>
  unnest(data) |>
  mutate(base_path = str_sub(base_path, 2)) |>
  separate(base_path,
    into = c("category", "sub_category"),
    sep = "/") |>
  filter(!str_detect(sub_category, "delta")) |>
  pivot_longer(
    -c(category, sub_category, ISO3, Name),
    names_to = "year", values_to = "score",
    names_transform = list(year = as.integer)) ->
tidy_groups
```

Let's have a look at this year's readiness ($R$) and vulnerability ($V$). From there, the ND-Gain score ($N$) is:

$$
N = (R â€“ V + 1) * 50
$$

For this exploration, I'm going to drop the $* 50$ and just look at the net scores as $R-V$, so we can compare with the bars.

```{r}
#| label: plot-latest-readiness-vulnerability

tidy_groups |>
  filter(
    sub_category == category,
    year == max(year)) |>
  select(-sub_category) |>
  pivot_wider(names_from = category, values_from = score) |>
  mutate(ndgain = readiness - vulnerability) |>
  filter(!is.na(ndgain)) |>
  mutate(
    Name = fct_reorder(Name, ndgain),
    iso2 = tolower(countrycode(ISO3, "iso3c", "iso2c"))) ->
latest_vuln_read

# bar chart showing balance... this is pretty rough though
ggplot(latest_vuln_read) +
  aes(y = Name) +
  geom_col(aes(x = readiness)) +
  geom_col(aes(x = -vulnerability)) +
  geom_vline(xintercept = 0) +
  geom_flag(aes(x = ndgain, country = iso2)) +
  geom_label(aes(x = ndgain, label = ISO3), nudge_x = 0.075, alpha = 0.5) +
  theme_minimal() +
  theme(
    axis.text.y = element_blank(),
    axis.title.y = element_blank())

# let's try a scatter instead, since this is how notre dame shows its results
ggplot(latest_vuln_read) +
  aes(x = readiness, y = vulnerability) +
  geom_point(size = 6) +
  geom_flag(aes(country = iso2)) +
  geom_text(aes(label = ISO3), nudge_y = -0.0125, alpha = 0.5) +
  # geom_vline(xintercept = 0) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  annotate("text", label = "Well positioned", x = Inf, y = -Inf,
    hjust = "inward", vjust = "inward") +
  annotate("text", label = "Challenged", x = -Inf, y = Inf,
    hjust = "inward", vjust = "inward") +
  # coord_equal(xlim = 0:1, ylim = 0:1) +
  coord_equal() +
  theme_minimal() +
  theme() +
  labs(
    x = "Readiness", y = "Vulnerability",
    title = "ND-GAIN 2023 Scores") ->
plot_latest_scores 

ggsave(here("latest.png"), plot_latest_scores, bg = "white")
```

# Readiness and vulnerability: all years

Write out for OJS plot:

```{r}
#| label: readi-vuln-allyears

tidy_groups |>
  filter(sub_category == category) |>
  select(-sub_category) |>
  pivot_wider(names_from = category, values_from = score) |>
  mutate(ndgain = readiness - vulnerability) |>
  filter(!is.na(ndgain)) |>
  mutate(
    Name = fct_reorder(Name, ndgain),
    iso2 = tolower(countrycode(ISO3, "iso3c", "iso2c"))) |>
  select(iso2, iso3 = ISO3, name = Name, everything()) |>
  write_csv(here("data", "ndgain-readiness-vulnerability-allyears.csv"))
```